---
import { Icon } from "astro-icon/components";

export interface Props {
    text?: string;
    icon?: string;
    iconSize?: number;
    size?: "xs" | "sm" | "md" | "lg";
    style?: "primary" | "button" | "outline" | "buttonLight";
    class?: string;
    [x: string]: unknown;
}

const {
    text,
    icon,
    iconSize = 24,
    size,
    style = "primary",
    class: className
} = Astro.props as Props;

const sizes = {
    xs: "px-2 py-1 text-xs",
    sm: "px-4 py-2 text-sm",
    md: "px-5 py-2.5 text-lg",
    lg: "px-8 py-3 text-xl"
};

const buttonStyle = {
    primary:
        "bg-foreground/10 flex items-center justify-center inset-shadow-2xs inset-shadow-foreground/20 rounded-lg hover:text-foreground/80",

    button: "inset-shadow-2xs inset-shadow-foreground/20 text-foreground rounded-lg shadow-md hover:bg-background/90 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-background",

    outline:
        "text-foreground rounded-lg shadow-md hover:bg-background/10 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-background",

    buttonLight:
        "bg-background/10 border border-foreground/20 text-foreground rounded-lg shadow-md hover:bg-background/20 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-background"
};
---

<button
    class={`inline-flex items-center justify-center gap-2 transition-colors duration-200 cursor-pointer ${size ? sizes[size] : ""} ${buttonStyle[style]} ${className}`}
>
    {text && <p>{text}</p>}
    {icon && <Icon name={icon} size={iconSize} />}
</button>
